name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Create test environment file
      run: |
        echo "DATABASE_URL=postgresql://test:test@localhost:5432/test" > .env
        echo "NEXTAUTH_SECRET=test-secret-$(openssl rand -base64 32)" >> .env
        echo "NEXT_PUBLIC_APP_URL=http://localhost:3000" >> .env
        echo "LIQPAY_PUBLIC_KEY=mock_public_key" >> .env
        echo "LIQPAY_PRIVATE_KEY=mock_private_key" >> .env

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Run tests
      run: npm test

    - name: Run type check
      run: npx tsc --noEmit --skipLibCheck

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Create production environment file
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
        echo "NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}" >> .env
        echo "LIQPAY_PUBLIC_KEY=${{ secrets.LIQPAY_PUBLIC_KEY }}" >> .env
        echo "LIQPAY_PRIVATE_KEY=${{ secrets.LIQPAY_PRIVATE_KEY }}" >> .env

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          .next/
          public/
        retention-days: 7